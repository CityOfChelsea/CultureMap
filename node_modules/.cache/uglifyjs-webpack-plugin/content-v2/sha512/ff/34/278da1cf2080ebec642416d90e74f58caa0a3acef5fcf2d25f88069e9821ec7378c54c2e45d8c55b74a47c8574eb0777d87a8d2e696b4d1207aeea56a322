{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap\",\"/Users/tohorner/Documents/CCC/src/assets/js/util.js\",\"/Users/tohorner/Documents/CCC/src/assets/js/config.js\",\"/Users/tohorner/Documents/CCC/src/assets/js/main.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"enumerable\",\"get\",\"r\",\"Symbol\",\"toStringTag\",\"value\",\"t\",\"mode\",\"__esModule\",\"ns\",\"create\",\"key\",\"bind\",\"n\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"clusterFunction\",\"category\",\"cluster\",\"count\",\"getChildCount\",\"digits\",\"length\",\"L\",\"divIcon\",\"html\",\"className\",\"iconSize\",\"format_popup\",\"layer\",\"feature_props\",\"feature\",\"properties\",\"template\",\"Util\",\"invert_dict\",\"dict\",\"asset_categories_reversed\",\"label_friendly_layers\",\"layers\",\"inverted\",\"base_map_URL\",\"feature_layer_URL\",\"asset_categories\",\"Architecture\",\"Landmark or monument\",\"Public art\",\"Creative industry\",\"Park or open space\",\"Cultural facility\",\"Food\",\"Programming or event\",\"palette\",\"architecture\",\"landmark\",\"public-art\",\"creative-industry\",\"food\",\"cultural-facility\",\"park\",\"programming\",\"category_field\",\"iconURL\",\"iconExtension\",\"_config\",\"util\",\"mymap\",\"map\",\"zoomControl\",\"scrollWheelZoom\",\"Control\",\"Zoom\",\"position\",\"addTo\",\"setView\",\"tileLayer\",\"maxZoom\",\"esri\",\"query\",\"url\",\"where\",\"run\",\"error\",\"featureCollection\",\"response\",\"$\",\"modal\",\"console\",\"log\",\"_loop\",\"cat\",\"icon\",\"iconUrl\",\"catClusterFunction\",\"markers\",\"markerClusterGroup\",\"layerSupport\",\"iconCreateFunction\",\"disableClusteringAtZoom\",\"mylayer\",\"geoJSON\",\"pointToLayer\",\"geojson\",\"latlng\",\"marker\",\"onEachFeature\",\"on\",\"NAME\",\"modal_content\",\"PIC_URL\",\"TAB_NAME\",\"DESC1\",\"filter\",\"addLayer\"],\"mappings\":\"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\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\\n \\t\\t}\\n \\t};\\n\\n \\t// define __esModule on exports\\n \\t__webpack_require__.r = function(exports) {\\n \\t\\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\\n \\t\\t\\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\\n \\t\\t}\\n \\t\\tObject.defineProperty(exports, '__esModule', { value: true });\\n \\t};\\n\\n \\t// create a fake namespace object\\n \\t// mode & 1: value is a module id, require it\\n \\t// mode & 2: merge all properties of value into the ns\\n \\t// mode & 4: return value when already ns object\\n \\t// mode & 8|1: behave like require\\n \\t__webpack_require__.t = function(value, mode) {\\n \\t\\tif(mode & 1) value = __webpack_require__(value);\\n \\t\\tif(mode & 8) return value;\\n \\t\\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\\n \\t\\tvar ns = Object.create(null);\\n \\t\\t__webpack_require__.r(ns);\\n \\t\\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\\n \\t\\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\\n \\t\\treturn ns;\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"\\\";\\n\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 2);\\n\",\"/**\\n * Closure for assigning classes to icons according\\n * to asset category\\n * @param  {string} category [description]\\n * @return {function}          [description]\\n */\\nexport function clusterFunction(category) {\\n  return function(cluster) {\\n    // get the number of items in the cluster\\n    var count = cluster.getChildCount();\\n\\n    // figure out how many digits long the number is\\n    var digits = (count + '').length;\\n\\n    // return a new L.DivIcon with our classes so we can\\n    // style them with CSS. Take a look at the CSS in\\n    // the <head> to see these styles. You have to set\\n    // iconSize to null if you want to use CSS to set the\\n    // width and height.\\n    return new L.divIcon({\\n      html: count,\\n      className: 'cluster digits-' + digits + \\\"-\\\" + category,\\n      iconSize: null\\n    });\\n  }\\n};\\n\\n/**\\n * Formats popup with information from ArcGIS Online.\\n * Fields are currently hard-coded into function.\\n * @param  {Leaflet layer} layer [description]\\n * @return {string}       HTML string for popup\\n */\\nexport function format_popup(layer) {\\n\\n  let feature_props = layer.feature.properties;\\n  let template = \\\"<h3>{NAME}</h3>\\\"\\n\\n  if (feature_props['PIC_URL']) {\\n    template = template + '<img src={PIC_URL}>';\\n  }\\n\\n  if (feature_props['DESC1']) {\\n    template = template + '<p>{DESC1}</p>';\\n  }\\n\\n  if (feature_props['TAB_NAME']) {\\n    template = template + '<p><i>Category: {TAB_NAME}</p></i>';\\n  }\\n\\n  if (feature_props['WEBSITE']) {\\n    template = template + '<a href={WEBSITE} class=\\\"button small special\\\">More info</a>';\\n  }\\n\\n  return L.Util.template(template, layer.feature.properties);\\n}\\n\\n/**\\n * Exchanges dictionary keys for values\\n * @param  {dictionary} dict input dicitonary\\n * @return {dictionary}      reversed dicitonary\\n */\\nexport function invert_dict(dict){\\n  let asset_categories_reversed = {};\\n  for (let key in dict) {\\n    asset_categories_reversed[dict[key]] = key\\n  }\\n  return asset_categories_reversed;\\n}\\n\\n/**\\n * Convert keys in an dictionary of Leaflet layers\\n * from HTML-safe strings to readable strings\\n * @param  {[type]} layers   Dictionary of layers with HTML-safe keys\\n * @param  {[type]} inverted Dictionary that maps HTML-safe to readable keys\\n * @return {[type]}          Dictionary of layers with readable keys\\n */\\nexport function label_friendly_layers(layers, inverted){\\n  let label_friendly_layers = {};\\n  for (let key in layers) {\\n    label_friendly_layers[inverted[key]] = layers[key]\\n  };\\n  return label_friendly_layers;\\n}\\n\",\"export const base_map_URL = 'https://api.mapbox.com/styles/v1/tohorner/cjhijn5ba1zon2rpelkgflt7y/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoidG9ob3JuZXIiLCJhIjoiY2l6NGFoeXIxMDRscDMycGd2dzVzZTg3NyJ9.Vfe_mGvZ-mHldkO0x2gXEw';\\nexport const feature_layer_URL = 'https://services3.arcgis.com/U4SbXhYNLOfN36SP/arcgis/rest/services/View_for_Shortlist/FeatureServer/0';\\n\\n/**\\n * Dictionary that maps label-friendly asset Categories\\n * to HTML and CSS-friendly asset-categories\\n * @type {Object}\\n */\\nexport const asset_categories = {\\n  'Architecture': 'architecture',\\n  'Landmark or monument': 'landmark',\\n  'Public art': 'public-art',\\n  'Creative industry': 'creative-industry',\\n  'Park or open space': 'park',\\n  'Cultural facility': 'cultural-facility',\\n  'Food': 'food',\\n  'Programming or event': 'programming'\\n};\\n\\nexport const palette = {\\n  \\\"architecture\\\": \\\"#2a3e50\\\", // Dark blue\\n  \\\"landmark\\\": \\\"#8C2A23\\\", // Sienna\\n  \\\"public-art\\\": \\\"#fc4349\\\", // Pink\\n  \\\"creative-industry\\\": \\\"#6dbcdb\\\", // Sky blue\\n  \\\"food\\\": \\\"#2E6E24\\\", // olive\\n  \\\"cultural-facility\\\": \\\"#ffb733\\\", // Gold\\n  \\\"park\\\": \\\"#1a9481\\\", // Teal\\n  \\\"programming\\\": \\\"#62358C\\\" // Purple\\n};\\nexport const category_field = 'TAB_NAME';\\n\\n/**\\n * Relative path where icon png's reside.\\n * @type {String}\\n */\\nexport const iconURL = './assets/icon/0.5x/';\\nexport const iconExtension = '@0.5x.png'\\n\",\"\\n\\nimport {\\n  base_map_URL,\\n  feature_layer_URL,\\n  asset_categories,\\n  palette,\\n  category_field,\\n  iconURL,\\n  iconExtension\\n} from './config.js';\\n\\nimport * as util from './util.js';\\n\\n// Initialize the Map\\nlet mymap = L.map('map', {\\n  zoomControl: false,\\n  scrollWheelZoom: false\\n})\\n\\n//Add zoom control\\nlet zoom = new L.Control.Zoom({\\n  position: 'bottomright'\\n}).addTo(mymap);\\n\\nmymap.setView([42.39, -71.035], 16);\\n\\n// Add the basemap\\nL.tileLayer(base_map_URL, {\\n  maxZoom: 20\\n}).addTo(mymap);\\n\\n// Dictionary for storing all layers.\\nlet layers = {};\\n\\n//Query all approved cultural assets,\\n//i.e. where STATUS = 1, then create Layers\\n//from the resulting geoJSON, by cultural asset cateogry\\nlet query = L.esri.query({\\n  url: feature_layer_URL\\n}).where(\\\"STATUS = 1\\\").run(function(error, featureCollection, response) {\\n\\n  $('#aboutModal').modal('show')\\n  console.log('hello>?')\\n\\n\\n  //Loop through all the asset categories,\\n  //creating a layer for each one.\\n  for (let cat in asset_categories) {\\n\\n    //Icons for non-clustered cultural assets\\n    let icon = L.icon({\\n      iconUrl: iconURL + asset_categories[cat] + iconExtension,\\n      iconSize: [15, 15]\\n    });\\n\\n    // Function that defines how the icons\\n    // representing clusters are created\\n    let catClusterFunction = util.clusterFunction(asset_categories[cat])\\n\\n    // Create an empty cluster marker group\\n    let markers = L.markerClusterGroup.layerSupport({\\n      iconCreateFunction: catClusterFunction,\\n      disableClusteringAtZoom: 18\\n    });\\n\\n    // Create a layer, filtering for a single\\n    // Asset category\\n    let mylayer = L.geoJSON(response, {\\n      pointToLayer: function(geojson, latlng) {\\n        return L.marker(latlng, {\\n          icon: icon\\n        });\\n      },\\n      onEachFeature: (feature, layer) => {\\n        layer.on('click', () => {\\n          $(\\\"#featureModal .modal-title\\\").html(feature.properties.NAME);\\n\\n          let modal_content = '';\\n\\n          if (feature.properties.PIC_URL){\\n            modal_content += `<img id=\\\"featureModalPic\\\" class=\\\"mb-3\\\" src=\\\"${feature.properties.PIC_URL}\\\">`\\n          }\\n          if (feature.properties.TAB_NAME){\\n            modal_content += `<p>Category: <i>${feature.properties.TAB_NAME}</i></p>`\\n          }\\n          if (feature.properties.DESC1){\\n            modal_content += feature.properties.DESC1\\n          }\\n\\n          $(\\\"#featureModal .modal-body\\\").html(modal_content);\\n\\n\\n          $(\\\"#featureModal\\\").modal(\\\"show\\\");\\n        })\\n      },\\n      filter: function(feature, layer) {\\n        if (feature.properties.TAB_NAME == cat) {\\n          return true;\\n        } else {\\n          return false;\\n        }\\n      }\\n    })\\n\\n    //Add the layer to the cluster group\\n    // mylayer.bindPopup(popup)\\n    markers.addLayer(mylayer)\\n    // markers.bindPopup(popup)\\n\\n    //Add the cluster group to the map\\n    // mymap.addLayer(markers)\\n    mymap.addLayer(markers)\\n\\n    //Add the layer to the layer dictionary\\n    layers[asset_categories[cat]] = markers;\\n\\n  } // End loop that creates layers\\n\\n  /***********Layers control***************/\\n\\n  // // Swap out html-safe asset category labels for readable labels\\n  // let asset_categories_inverted = util.invert_dict(asset_categories);\\n  // let label_friendly_layers = util.label_friendly_layers(layers, asset_categories_inverted);\\n  // let layer_widget = L.control.layers(null, label_friendly_layers).addTo(mymap);\\n  //\\n  // //Adjust colors of layer layer_widget\\n  // let palette_readable = {}\\n  // for (let key in palette) {\\n  //   palette_readable[asset_categories_inverted[key]] = palette[key]\\n  // }\\n  //\\n  // for (let key in palette_readable) {\\n  //   let selector_string = \\\"div.leaflet-control-layers-overlays span:contains('\\\" + key + \\\"')\\\"\\n  //   $(selector_string).closest(\\\"div\\\").css(\\\"background-color\\\", palette_readable[key]);\\n  // }\\n  //\\n  // //Change control icon\\n  //\\n  // $(\\\".leaflet-control-layers-toggle\\\").html(\\\"<h3>Cultural Asset Categories</h3>\\\")\\n  //\\n  // /***********Title Control***************/\\n  //\\n  // ctl.title({\\n  //   position: 'topleft'\\n  // }).addTo(mymap);\\n  //\\n  // /***********Search Control***************/\\n  //\\n  // /**\\n  //  * Combines a dictionary of L.markerClusterGroups into an array of L.Layers\\n  //  * @param  {A dictionary of L.markerClusterGroups} markerClusterGroups [description]\\n  //  * @return {An array of L.Layer}                     [description]\\n  //  */\\n  // function combineClusterGroups(markerClusterGroups) {\\n  //   let all_assets = [];\\n  //   for (let markerClusterGroup in markerClusterGroups) {\\n  //     let markerGroupAssets = markerClusterGroups[markerClusterGroup].getLayers();\\n  //     all_assets = all_assets.concat(markerGroupAssets);\\n  //   }\\n  //   return all_assets;\\n  // }\\n  //\\n  // let all_assets = combineClusterGroups(layers);\\n  // console.log(all_assets)\\n  //\\n  // //Test Search\\n  // const searchCtrl = fuseSearch(all_assets);\\n  //\\n  // let arch = layers['architecture'];\\n  //\\n  //\\n  // console.log('layer', arch.getLayer(83).fire(\\\"click\\\"));\\n  //\\n  //\\n  // searchCtrl.addTo(mymap);\\n  // searchCtrl.indexFeatures(response, ['NAME']);\\n  //\\n  // /***********Google Translate Control***************/\\n  //\\n  // ctl.translator({\\n  //   position: 'bottomleft'\\n  // }).addTo(mymap);\\n\\n}) // End query.run()\\n\"]}","code":"!function(e){var r={};function t(o){if(r[o])return r[o].exports;var n=r[o]={i:o,l:!1,exports:{}};return e[o].call(n.exports,n,n.exports,t),n.l=!0,n.exports}t.m=e,t.c=r,t.d=function(e,r,o){t.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:o})},t.r=function(e){\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(e,\"__esModule\",{value:!0})},t.t=function(e,r){if(1&r&&(e=t(e)),8&r)return e;if(4&r&&\"object\"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(t.r(o),Object.defineProperty(o,\"default\",{enumerable:!0,value:e}),2&r&&\"string\"!=typeof e)for(var n in e)t.d(o,n,function(r){return e[r]}.bind(null,n));return o},t.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(r,\"a\",r),r},t.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},t.p=\"\",t(t.s=2)}([function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0}),r.clusterFunction=function(e){return function(r){var t=r.getChildCount(),o=(t+\"\").length;return new L.divIcon({html:t,className:\"cluster digits-\"+o+\"-\"+e,iconSize:null})}},r.format_popup=function(e){var r=e.feature.properties,t=\"<h3>{NAME}</h3>\";r.PIC_URL&&(t+=\"<img src={PIC_URL}>\");r.DESC1&&(t+=\"<p>{DESC1}</p>\");r.TAB_NAME&&(t+=\"<p><i>Category: {TAB_NAME}</p></i>\");r.WEBSITE&&(t+='<a href={WEBSITE} class=\"button small special\">More info</a>');return L.Util.template(t,e.feature.properties)},r.invert_dict=function(e){var r={};for(var t in e)r[e[t]]=t;return r},r.label_friendly_layers=function(e,r){var t={};for(var o in e)t[r[o]]=e[o];return t}},function(e,r,t){\"use strict\";Object.defineProperty(r,\"__esModule\",{value:!0});r.base_map_URL=\"https://api.mapbox.com/styles/v1/tohorner/cjhijn5ba1zon2rpelkgflt7y/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoidG9ob3JuZXIiLCJhIjoiY2l6NGFoeXIxMDRscDMycGd2dzVzZTg3NyJ9.Vfe_mGvZ-mHldkO0x2gXEw\",r.feature_layer_URL=\"https://services3.arcgis.com/U4SbXhYNLOfN36SP/arcgis/rest/services/View_for_Shortlist/FeatureServer/0\",r.asset_categories={Architecture:\"architecture\",\"Landmark or monument\":\"landmark\",\"Public art\":\"public-art\",\"Creative industry\":\"creative-industry\",\"Park or open space\":\"park\",\"Cultural facility\":\"cultural-facility\",Food:\"food\",\"Programming or event\":\"programming\"},r.palette={architecture:\"#2a3e50\",landmark:\"#8C2A23\",\"public-art\":\"#fc4349\",\"creative-industry\":\"#6dbcdb\",food:\"#2E6E24\",\"cultural-facility\":\"#ffb733\",park:\"#1a9481\",programming:\"#62358C\"},r.category_field=\"TAB_NAME\",r.iconURL=\"./assets/icon/0.5x/\",r.iconExtension=\"@0.5x.png\"},function(e,r,t){\"use strict\";var o=t(1),n=function(e){if(e&&e.__esModule)return e;var r={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(r[t]=e[t]);return r.default=e,r}(t(0));var i=L.map(\"map\",{zoomControl:!1,scrollWheelZoom:!1});new L.Control.Zoom({position:\"bottomright\"}).addTo(i);i.setView([42.39,-71.035],16),L.tileLayer(o.base_map_URL,{maxZoom:20}).addTo(i);var a={};L.esri.query({url:o.feature_layer_URL}).where(\"STATUS = 1\").run(function(e,r,t){$(\"#aboutModal\").modal(\"show\"),console.log(\"hello>?\");var u=function(e){var r=L.icon({iconUrl:o.iconURL+o.asset_categories[e]+o.iconExtension,iconSize:[15,15]}),u=n.clusterFunction(o.asset_categories[e]),c=L.markerClusterGroup.layerSupport({iconCreateFunction:u,disableClusteringAtZoom:18}),l=L.geoJSON(t,{pointToLayer:function(e,t){return L.marker(t,{icon:r})},onEachFeature:function(e,r){r.on(\"click\",function(){$(\"#featureModal .modal-title\").html(e.properties.NAME);var r=\"\";e.properties.PIC_URL&&(r+='<img id=\"featureModalPic\" class=\"mb-3\" src=\"'+e.properties.PIC_URL+'\">'),e.properties.TAB_NAME&&(r+=\"<p>Category: <i>\"+e.properties.TAB_NAME+\"</i></p>\"),e.properties.DESC1&&(r+=e.properties.DESC1),$(\"#featureModal .modal-body\").html(r),$(\"#featureModal\").modal(\"show\")})},filter:function(r,t){return r.properties.TAB_NAME==e}});c.addLayer(l),i.addLayer(c),a[o.asset_categories[e]]=c};for(var c in o.asset_categories)u(c)})}]);","extractedComments":[]}